#SQL[@2,N48]Result[38, 1]
select json_extract('{"a":1,"b":2,"c":3}','$.a');
json_extract({"a":1,"b":2,"c":3}, $.a)
1

#SQL[@3,N48]Result[38, 1]
select json_extract('{"a":1,"b":2,"c":3}','$.b');
json_extract({"a":1,"b":2,"c":3}, $.b)
2

#SQL[@4,N53]Result[43, 1]
select json_extract('{"a":{"q":[1,2,3]}}','$.a.q[1]');
json_extract({"a":{"q":[1,2,3]}}, $.a.q[1])
2

#SQL[@5,N73]Result[63, 1]
select json_extract('[{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}]','$[1].a');
json_extract([{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}], $[1].a)
4

#SQL[@6,N71]Result[61, 8]
select json_extract('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q[1]');
json_extract({"a":{"q":[{"a":1},{"a":2},{"a":3}]}}, $.a.q[1])
{"a": 2}

#SQL[@7,N68]Result[58, 30]
select json_extract('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q');
json_extract({"a":{"q":[{"a":1},{"a":2},{"a":3}]}}, $.a.q)
[{"a": 1}, {"a": 2}, {"a": 3}]

#SQL[@8,N37]Result[27, 9]
select json_extract('[1,2,3]','$[*]');
json_extract([1,2,3], $[*])
[1, 2, 3]

#SQL[@9,N55]Result[45, 1]
select json_extract('{"a":[1,2,3,{"b":4}]}','$.a[3].b');
json_extract({"a":[1,2,3,{"b":4}]}, $.a[3].b)
4

#SQL[@10,N55]Result[45, 4]
select json_extract('{"a":[1,2,3,{"b":4}]}','$.a[3].c');
json_extract({"a":[1,2,3,{"b":4}]}, $.a[3].c)
null

#SQL[@11,N56]Result[46, 24]
select json_extract('{"a":[1,2,3,{"b":4}],"c":5}','$.*');
json_extract({"a":[1,2,3,{"b":4}],"c":5}, $.*)
[[1, 2, 3, {"b": 4}], 5]

#SQL[@12,N52]Result[42, 24]
select json_extract('{"a":[1,2,3,{"a":4}]}','$**.a');
json_extract({"a":[1,2,3,{"a":4}]}, $**.a)
[[1, 2, 3, {"a": 4}], 4]

#SQL[@13,N55]Result[45, 1]
select json_extract('{"a":[1,2,3,{"a":4}]}','$.a[*].a');
json_extract({"a":[1,2,3,{"a":4}]}, $.a[*].a)
4

#SQL[@14,N37]Result[27, 8]
select json_extract('{"a":1}','$[0]');
json_extract({"a":1}, $[0])
{"a": 1}

#SQL[@15,N39]Result[29, 1]
select json_extract('{"a":1}','$[0].a');
json_extract({"a":1}, $[0].a)
1

#SQL[@16,N39]Result[29, 4]
select json_extract('{"a":1}','$[0].b');
json_extract({"a":1}, $[0].b)
null

#SQL[@17,N37]Result[27, 4]
select json_extract('{"a":1}','$[1]');
json_extract({"a":1}, $[1])
null

#SQL[@18,N74]Result[64, 4]
select json_extract('{"af": [1, "2", {"aaf": "bb"}],"eab":"888"}','$**.f');
json_extract({"af": [1, "2", {"aaf": "bb"}],"eab":"888"}, $**.f)
null

#SQL[@19,N59]Result[49, 29]
select json_extract('{"a": [1, "2", {"a": "bb"}]}','$**.a');
json_extract({"a": [1, "2", {"a": "bb"}]}, $**.a)
[[1, "2", {"a": "bb"}], "bb"]

#SQL[@20,N50]Error[39]
select  json_extract('{"a":"a1","b":"b1"}','$.**');
invalid input: invalid json path '$.**'

#SQL[@21,N51]Error[40]
select  json_extract('{"a":"a1","b":"b1"}','$**.1');
invalid input: invalid json path '$**.1'

#SQL[@24,N23]Result[]
drop table if exists t1;

#SQL[@25,N30]Result[]
create table t1 (a json,b int);

#SQL[@26,N52]Result[]
insert into t1(a,b) values ('{"a":1,"b":2,"c":3}',1);

#SQL[@27,N52]Result[23, 1]
select json_extract(t1.a,'$.a') from t1 where t1.b=1;
json_extract(t1.a, $.a)
1

#SQL[@28,N52]Result[]
insert into t1(a,b) values ('{"a":4,"b":5,"c":6}',2);

#SQL[@29,N52]Result[23, 1]
select json_extract(t1.a,'$.b') from t1 where t1.b=2;
json_extract(t1.a, $.b)
5

#SQL[@30,N39]Result[23, 1, 1]
select json_extract(t1.a,'$.a') from t1;
json_extract(t1.a, $.a)
1
4

#SQL[@31,N52]Result[]
insert into t1(a,b) values ('{"a":{"q":[1,2,3]}}',3);

#SQL[@32,N57]Result[28, 1]
select json_extract(t1.a,'$.a.q[1]') from t1 where t1.b=3;
json_extract(t1.a, $.a.q[1])
2

#SQL[@33,N74]Result[]
insert into t1(a,b) values ('[{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}]',4);

#SQL[@34,N55]Result[26, 1]
select json_extract(t1.a,'$[1].a') from t1 where t1.b=4;
json_extract(t1.a, $[1].a)
4

#SQL[@35,N70]Result[]
insert into t1(a,b) values ('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}',5);

#SQL[@36,N57]Result[28, 8]
select json_extract(t1.a,'$.a.q[1]') from t1 where t1.b=5;
json_extract(t1.a, $.a.q[1])
{"a": 2}

#SQL[@37,N54]Result[25, 30]
select json_extract(t1.a,'$.a.q') from t1 where t1.b=5;
json_extract(t1.a, $.a.q)
[{"a": 1}, {"a": 2}, {"a": 3}]

#SQL[@38,N40]Result[]
insert into t1(a,b) values ('[1,2,3]',6);

#SQL[@39,N53]Result[24, 9]
select json_extract(t1.a,'$[*]') from t1 where t1.b=6;
json_extract(t1.a, $[*])
[1, 2, 3]

#SQL[@40,N54]Result[]
insert into t1(a,b) values ('{"a":[1,2,3,{"b":4}]}',7);

#SQL[@41,N57]Result[28, 1]
select json_extract(t1.a,'$.a[3].b') from t1 where t1.b=7;
json_extract(t1.a, $.a[3].b)
4

#SQL[@42,N57]Result[28, 4]
select json_extract(t1.a,'$.a[3].c') from t1 where t1.b=7;
json_extract(t1.a, $.a[3].c)
null

#SQL[@43,N60]Result[]
insert into t1(a,b) values ('{"a":[1,2,3,{"b":4}],"c":5}',8);

#SQL[@44,N52]Result[23, 24]
select json_extract(t1.a,'$.*') from t1 where t1.b=8;
json_extract(t1.a, $.*)
[[1, 2, 3, {"b": 4}], 5]

#SQL[@45,N54]Result[]
insert into t1(a,b) values ('{"a":[1,2,3,{"a":4}]}',9);

#SQL[@46,N54]Result[25, 24]
select json_extract(t1.a,'$**.a') from t1 where t1.b=9;
json_extract(t1.a, $**.a)
[[1, 2, 3, {"a": 4}], 4]

#SQL[@47,N57]Result[28, 1]
select json_extract(t1.a,'$.a[*].a') from t1 where t1.b=9;
json_extract(t1.a, $.a[*].a)
4

#SQL[@48,N13]Result[]
drop table t1;

#SQL[@49,N24]Result[]
create table t1 (a json);

#SQL[@50,N59]Result[]
insert into t1(a) values ('{"a":1}'),('[1,2]'),('{"xa":1}');

#SQL[@51,N23]Result[]
drop table if exists t2;

#SQL[@52,N32]Result[]
create table t2 (a varchar(100));

#SQL[@53,N38]Result[]
insert into t2 values ('$[0]'),('$.a');

#SQL[@54,N56]Result[17, 32, 24, 23, 25, 34, 28]
select json_extract(t1.a,t2.a) qqq,t1.a,t2.a from t2, t1;
qqq  ¦  a  ¦  a
{"a": 1}  ¦  {"a": 1}  ¦  $[0]
1  ¦  {"a": 1}  ¦  $.a
1  ¦  [1, 2]  ¦  $[0]
null  ¦  [1, 2]  ¦  $.a
{"xa": 1}  ¦  {"xa": 1}  ¦  $[0]
null  ¦  {"xa": 1}  ¦  $.a

#SQL[@55,N33]Result[]
drop table if exists json_table_1;

#SQL[@56,N35]Result[]
create table json_table_1 (j1 json);

#SQL[@57,N337]Result[]
insert into json_table_1 values('{"key10": "value1", "key2": "value2"}'),('{"key1": "@#$_%^&*()!@", "123456": "中文mo"}'),('{"芝士面包": "12abc", "123456": "中文mo"}'),('{"": "", "123456": "中文mo"}'),('{"a 1": "b 1", "123456": "中文mo"}'),('{"d1": "2020-10-09", "d2": "2019-08-20 12:30:00"}'),('{"d1": [true,false]}'),('{}');

#SQL[@58,N66]Result[38, 12, 12, 12, 12, 12, 12, 12, 12]
select json_extract('{"a":"a1","b":"b1"}','$.*') from json_table_1;
json_extract({"a":"a1","b":"b1"}, $.*)
["a1", "b1"]
["a1", "b1"]
["a1", "b1"]
["a1", "b1"]
["a1", "b1"]
["a1", "b1"]
["a1", "b1"]
["a1", "b1"]

#SQL[@59,N54]Result[]
create view v1 as select json_extract('{"a":1}','$.a');

#SQL[@60,N7]Result[71, 75]
desc v1;
Field  ¦  Type  ¦  Null  ¦  Key  ¦  Default  ¦  Extra  ¦  Comment
json_extract({"a":1}, $.a)  ¦  JSON(0)  ¦  NO  ¦    ¦  null  ¦    ¦  

#SQL[@62,N35]Result[27, 4]
select json_extract('{"a":1}',null);
json_extract({"a":1}, null)
null

#SQL[@63,N29]Result[21, 4]
select json_extract(null,'$');
json_extract(null, $)
null

#SQL[@64,N30]Result[24, 4]
select json_extract(null,null);
json_extract(null, null)
null

#SQL[@65,N53]Result[27, 4, 4, 4, 4, 4, 4, 4, 4]
select json_extract('{"a":1}',null) from json_table_1;
json_extract({"a":1}, null)
null
null
null
null
null
null
null
null

#SQL[@66,N47]Result[21, 4, 4, 4, 4, 4, 4, 4, 4]
select json_extract(null,'$') from json_table_1;
json_extract(null, $)
null
null
null
null
null
null
null
null

#SQL[@67,N40]Result[30, 1]
select json_extract('[1,2,3]','$[last]');
json_extract([1,2,3], $[last])
3

#SQL[@68,N42]Result[32, 1]
select json_extract('[1,2,3]','$[last-1]');
json_extract([1,2,3], $[last-1])
2

#SQL[@69,N42]Result[32, 1]
select json_extract('[1,2,3]','$[last-2]');
json_extract([1,2,3], $[last-2])
1

#SQL[@70,N42]Result[32, 4]
select json_extract('[1,2,3]','$[last-3]');
json_extract([1,2,3], $[last-3])
null

#SQL[@71,N42]Result[32, 9]
select json_extract('[1,2,3]','$[0 to 2]');
json_extract([1,2,3], $[0 to 2])
[1, 2, 3]

#SQL[@72,N45]Result[35, 9]
select json_extract('[1,2,3]','$[0 to last]');
json_extract([1,2,3], $[0 to last])
[1, 2, 3]

#SQL[@73,N47]Result[37, 6]
select json_extract('[1,2,3]','$[0 to last-1]');
json_extract([1,2,3], $[0 to last-1])
[1, 2]

#SQL[@74,N50]Result[40, 9]
select json_extract('[1,2,3]','$[last-2 to last]');
json_extract([1,2,3], $[last-2 to last])
[1, 2, 3]

#SQL[@75,N52]Error[54]
select json_extract('[1,2,3]','$[last-1 to last-2]');
invalid input: invalid json path '$[last-1 to last-2]'

#SQL[@76,N52]Result[42, 1]
select json_extract('[1,2,3]','$[last-8 to last-2]');
json_extract([1,2,3], $[last-8 to last-2])
1

#SQL[@77,N52]Error[54]
select json_extract('[1,2,3]','$[last-2 to last-8]');
invalid input: invalid json path '$[last-2 to last-8]'

#SQL[@78,N47]Result[37, 4]
select json_extract('[1,2,3]','$[0 to last-8]');
json_extract([1,2,3], $[0 to last-8])
null

#SQL[@81,N54]Result[43, 6]
select json_extract('{"a":1,"b":2,"c":3}','$.a','$.b');
json_extract({"a":1,"b":2,"c":3}, $.a, $.b)
[1, 2]

#SQL[@82,N60]Result[48, 9]
select json_extract('{"a":1,"b":2,"c":3}','$.a','$.b','$.c');
json_extract({"a":1,"b":2,"c":3}, $.a, $.b, $.c)
[1, 2, 3]

#SQL[@83,N54]Result[43, 3]
select json_extract('{"a":1,"b":2,"c":3}','$.c','$.d');
json_extract({"a":1,"b":2,"c":3}, $.c, $.d)
[3]

#SQL[@84,N46]Result[33, 6]
select json_extract('[0,1,2]', '$[0]', '$[1]');
json_extract([0,1,2], $[0], $[1])
[0, 1]

#SQL[@85,N46]Result[33, 6]
select json_extract('[0,1,2]', '$[1]', '$[0]');
json_extract([0,1,2], $[1], $[0])
[1, 0]

#SQL[@86,N59]Result[44, 9]
select json_extract('[0,1,2]', '$[last-1]', '$[0]', '$[2]');
json_extract([0,1,2], $[last-1], $[0], $[2])
[1, 0, 2]

#SQL[@88,N37]Result[27, 4]
select json_extract('[0,1,2]','$[4]');
json_extract([0,1,2], $[4])
null

#SQL[@89,N39]Result[29, 4]
select json_extract('[0,1,2]','$[100]');
json_extract([0,1,2], $[100])
null

#SQL[@90,N85]Result[75, 4]
select json_extract('[0,234,32432,423,5234,11443242,44242342424,23424323]','$[2000]');
json_extract([0,234,32432,423,5234,11443242,44242342424,23424323], $[2000])
null

#SQL[@93,N55]Result[45, 4]
select json_extract_string('{"a":1,"b":2,"c":3}','$.a');
json_extract_string({"a":1,"b":2,"c":3}, $.a)
null

#SQL[@94,N55]Result[45, 4]
select json_extract_string('{"a":1,"b":2,"c":3}','$.b');
json_extract_string({"a":1,"b":2,"c":3}, $.b)
null

#SQL[@95,N61]Result[51, 1]
select json_extract_string('{"a":"x","b":"y","c":"z"}','$.a');
json_extract_string({"a":"x","b":"y","c":"z"}, $.a)
x

#SQL[@96,N61]Result[51, 1]
select json_extract_string('{"a":"x","b":"y","c":"z"}','$.b');
json_extract_string({"a":"x","b":"y","c":"z"}, $.b)
y

#SQL[@97,N60]Result[50, 4]
select json_extract_string('{"a":{"q":[1,2,3]}}','$.a.q[1]');
json_extract_string({"a":{"q":[1,2,3]}}, $.a.q[1])
null

#SQL[@98,N80]Result[70, 4]
select json_extract_string('[{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}]','$[1].a');
json_extract_string([{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}], $[1].a)
null

#SQL[@99,N78]Result[68, 4]
select json_extract_string('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q[1]');
json_extract_string({"a":{"q":[{"a":1},{"a":2},{"a":3}]}}, $.a.q[1])
null

#SQL[@100,N75]Result[65, 4]
select json_extract_string('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q');
json_extract_string({"a":{"q":[{"a":1},{"a":2},{"a":3}]}}, $.a.q)
null

#SQL[@101,N44]Error[81]
select json_extract_string('[1,2,3]','$[*]');
invalid input: json_extract_string should use a path that retrives a single value

#SQL[@102,N62]Result[52, 4]
select json_extract_string('{"a":[1,2,3,{"b":4}]}','$.a[3].b');
json_extract_string({"a":[1,2,3,{"b":4}]}, $.a[3].b)
null

#SQL[@103,N62]Result[52, 4]
select json_extract_string('{"a":[1,2,3,{"b":4}]}','$.a[3].c');
json_extract_string({"a":[1,2,3,{"b":4}]}, $.a[3].c)
null

#SQL[@104,N63]Error[81]
select json_extract_string('{"a":[1,2,3,{"b":4}],"c":5}','$.*');
invalid input: json_extract_string should use a path that retrives a single value

#SQL[@105,N59]Error[81]
select json_extract_string('{"a":[1,2,3,{"a":4}]}','$**.a');
invalid input: json_extract_string should use a path that retrives a single value

#SQL[@106,N62]Error[81]
select json_extract_string('{"a":[1,2,3,{"a":4}]}','$.a[*].a');
invalid input: json_extract_string should use a path that retrives a single value

#SQL[@107,N44]Result[34, 4]
select json_extract_string('{"a":1}','$[0]');
json_extract_string({"a":1}, $[0])
null

#SQL[@108,N46]Result[36, 4]
select json_extract_string('{"a":1}','$[0].a');
json_extract_string({"a":1}, $[0].a)
null

#SQL[@109,N46]Result[36, 4]
select json_extract_string('{"a":1}','$[0].b');
json_extract_string({"a":1}, $[0].b)
null

#SQL[@110,N44]Result[34, 4]
select json_extract_string('{"a":1}','$[1]');
json_extract_string({"a":1}, $[1])
null

#SQL[@111,N81]Error[81]
select json_extract_string('{"af": [1, "2", {"aaf": "bb"}],"eab":"888"}','$**.f');
invalid input: json_extract_string should use a path that retrives a single value

#SQL[@112,N66]Error[81]
select json_extract_string('{"a": [1, "2", {"a": "bb"}]}','$**.a');
invalid input: json_extract_string should use a path that retrives a single value

#SQL[@113,N56]Error[39]
select json_extract_string('{"a":"a1","b":"b1"}','$.**');
invalid input: invalid json path '$.**'

#SQL[@114,N57]Error[40]
select json_extract_string('{"a":"a1","b":"b1"}','$**.1');
invalid input: invalid json path '$**.1'

#SQL[@117,N56]Result[46, 1]
select json_extract_float64('{"a":1,"b":2,"c":3}','$.a');
json_extract_float64({"a":1,"b":2,"c":3}, $.a)
1

#SQL[@118,N56]Result[46, 1]
select json_extract_float64('{"a":1,"b":2,"c":3}','$.b');
json_extract_float64({"a":1,"b":2,"c":3}, $.b)
2

#SQL[@119,N62]Result[52, 4]
select json_extract_float64('{"a":"x","b":"y","c":"z"}','$.a');
json_extract_float64({"a":"x","b":"y","c":"z"}, $.a)
null

#SQL[@120,N62]Result[52, 4]
select json_extract_float64('{"a":"x","b":"y","c":"z"}','$.b');
json_extract_float64({"a":"x","b":"y","c":"z"}, $.b)
null

#SQL[@121,N61]Result[51, 1]
select json_extract_float64('{"a":{"q":[1,2,3]}}','$.a.q[1]');
json_extract_float64({"a":{"q":[1,2,3]}}, $.a.q[1])
2

#SQL[@122,N81]Result[71, 1]
select json_extract_float64('[{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}]','$[1].a');
json_extract_float64([{"a":1,"b":2,"c":3},{"a":4,"b":5,"c":6}], $[1].a)
4

#SQL[@123,N79]Result[69, 4]
select json_extract_float64('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q[1]');
json_extract_float64({"a":{"q":[{"a":1},{"a":2},{"a":3}]}}, $.a.q[1])
null

#SQL[@124,N76]Result[66, 4]
select json_extract_float64('{"a":{"q":[{"a":1},{"a":2},{"a":3}]}}','$.a.q');
json_extract_float64({"a":{"q":[{"a":1},{"a":2},{"a":3}]}}, $.a.q)
null

#SQL[@125,N45]Error[82]
select json_extract_float64('[1,2,3]','$[*]');
invalid input: json_extract_float64 should use a path that retrives a single value

#SQL[@126,N63]Result[53, 1]
select json_extract_float64('{"a":[1,2,3,{"b":4}]}','$.a[3].b');
json_extract_float64({"a":[1,2,3,{"b":4}]}, $.a[3].b)
4

#SQL[@127,N63]Result[53, 4]
select json_extract_float64('{"a":[1,2,3,{"b":4}]}','$.a[3].c');
json_extract_float64({"a":[1,2,3,{"b":4}]}, $.a[3].c)
null

#SQL[@128,N64]Error[82]
select json_extract_float64('{"a":[1,2,3,{"b":4}],"c":5}','$.*');
invalid input: json_extract_float64 should use a path that retrives a single value

#SQL[@129,N60]Error[82]
select json_extract_float64('{"a":[1,2,3,{"a":4}]}','$**.a');
invalid input: json_extract_float64 should use a path that retrives a single value

#SQL[@130,N63]Error[82]
select json_extract_float64('{"a":[1,2,3,{"a":4}]}','$.a[*].a');
invalid input: json_extract_float64 should use a path that retrives a single value

#SQL[@131,N45]Result[35, 4]
select json_extract_float64('{"a":1}','$[0]');
json_extract_float64({"a":1}, $[0])
null

#SQL[@132,N47]Result[37, 1]
select json_extract_float64('{"a":1}','$[0].a');
json_extract_float64({"a":1}, $[0].a)
1

#SQL[@133,N47]Result[37, 4]
select json_extract_float64('{"a":1}','$[0].b');
json_extract_float64({"a":1}, $[0].b)
null

#SQL[@134,N45]Result[35, 4]
select json_extract_float64('{"a":1}','$[1]');
json_extract_float64({"a":1}, $[1])
null

#SQL[@135,N82]Error[82]
select json_extract_float64('{"af": [1, "2", {"aaf": "bb"}],"eab":"888"}','$**.f');
invalid input: json_extract_float64 should use a path that retrives a single value

#SQL[@136,N67]Error[82]
select json_extract_float64('{"a": [1, "2", {"a": "bb"}]}','$**.a');
invalid input: json_extract_float64 should use a path that retrives a single value

#SQL[@137,N57]Error[39]
select json_extract_float64('{"a":"a1","b":"b1"}','$.**');
invalid input: invalid json path '$.**'

#SQL[@138,N58]Error[40]
select json_extract_float64('{"a":"a1","b":"b1"}','$**.1');
invalid input: invalid json path '$**.1'

#SQL[@140,N85]Result[75, 30]
select json_extract_float64('{"a":123456789012345678901234567890,"b":2,"c":3}','$.a');
json_extract_float64({"a":123456789012345678901234567890,"b":2,"c":3}, $.a)
123456789012345680000000000000

#SQL[@141,N86]Result[76, 31]
select json_extract_float64('{"a":-123456789012345678901234567890,"b":2,"c":3}','$.a');
json_extract_float64({"a":-123456789012345678901234567890,"b":2,"c":3}, $.a)
-123456789012345680000000000000

#SQL[@142,N59]Result[49, 4]
select json_extract_float64('{"a":null,"b":2,"c":3}','$.a');
json_extract_float64({"a":null,"b":2,"c":3}, $.a)
null

#SQL[@143,N58]Error[52]
select json_extract_float64('{"a":NaN,"b":2,"c":3}','$.a');
invalid input: json text {\"a\":NaN,\"b\":2,\"c\":3}

#SQL[@144,N59]Result[49, 11]
select json_extract_float64('{"a":1e10,"b":2,"c":3}','$.a');
json_extract_float64({"a":1e10,"b":2,"c":3}, $.a)
10000000000

#SQL[@145,N72]Result[62, 15]
select json_extract_float64('{"a":3.1415926535897e1,"b":2,"c":3}','$.a');
json_extract_float64({"a":3.1415926535897e1,"b":2,"c":3}, $.a)
31.415926535897

#SQL[@147,N26]Result[]
drop table if exists jtags;

#SQL[@148,N51]Result[]
create table jtags(id int, tags json, metrics json);

#SQL[@149,N968]Result[]
insert into jtags values
(1, '{"tag1": "xxx", "tag2": "yyy1", "tag13": "zzz"}', '{"metric1": 1, "metric2": 1.0, "metric13": 1}'),
(2, '{"tag1": "xxx", "tag2": "yyy2", "tag23": "zzz"}', '{"metric1": 2, "metric2": 2.0, "metric23": 2}'),
(3, '{"tag1": "xxx", "tag2": "yyy3", "tag33": "zzz"}', '{"metric1": 3, "metric2": 3.0, "metric33": 3}'),
(4, '{"tag1": "xxx", "tag2": "yyy4", "tag43": "zzz"}', '{"metric1": 4, "metric2": 4.0, "metric43": 4}'),
(5, '{"tag1": "xxx", "tag2": "yyy5", "tag53": "zzz"}', '{"metric1": 5, "metric2": 5.0, "metric53": 5}'),
(6, '{"tag1": "xxx", "tag2": "yyy6", "tag63": "zzz"}', '{"metric1": 6, "metric2": 6.0, "metric63": 6}'),
(7, '{"tag1": "xxx", "tag2": "yyy7", "tag73": "zzz"}', '{"metric1": 7, "metric2": 7.0, "metric73": 7}'),
(8, '{"tag1": "xxx", "tag2": "yyy8", "tag83": "zzz"}', '{"metric1": 8, "metric2": 8.0, "metric83": 8}'),
(9, '{"tag1": "xxx", "tag2": "yyy9", "tag93": "zzz"}', '{"metric1": 9, "metric2": 9.0, "metric93": 9}');

#SQL[@160,N134]Result[11, 9]
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags;
s1  ¦  s33
45  ¦  3

#SQL[@161,N138]Result[11, 8]
select count(json_extract_float64(jtags.metrics, '$.metric1')) c1, count(json_extract_float64(jtags.metrics, '$.metric33')) c33 from jtags;
c1  ¦  c33
9  ¦  1

#SQL[@162,N190]Result[11, 9]
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag1') = 'xxx';
s1  ¦  s33
45  ¦  3

#SQL[@164,N191]Result[11, 8]
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag2') = 'yyy3';
s1  ¦  s33
3  ¦  3

#SQL[@166,N191]Result[11, 11]
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag2') = 'yyy5';
s1  ¦  s33
5  ¦  null

#SQL[@168,N191]Result[11, 8]
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag33') = 'zzz';
s1  ¦  s33
3  ¦  3

#SQL[@170,N191]Result[11, 11]
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag53') = 'zzz';
s1  ¦  s33
5  ¦  null

#SQL[@172,N191]Result[11, 14]
select sum(json_extract_float64(jtags.metrics, '$.metric1')) s1, sum(json_extract_float64(jtags.metrics, '$.metric33')) s33 from jtags
where json_extract_string(jtags.tags, '$.tag35') = 'zzz';
s1  ¦  s33
null  ¦  null

#SQL[@176,N34]Result[]
create database if not exists test;

#SQL[@177,N8]Result[]
use test;

#SQL[@178,N30]Result[]
create table json_tab (a json);

#SQL[@179,N104]Result[]
insert into json_tab values ('{"CODE": "BOARDCODE-3", "LINE": "BOARDLINE-0", "PANEL": "BOARDPANEL-69"}');

#SQL[@180,N22]Result[1, 72]
select * from json_tab;
a
{"CODE": "BOARDCODE-3", "LINE": "BOARDLINE-0", "PANEL": "BOARDPANEL-69"}

#SQL[@181,N53]Result[30, 11]
select json_extract_string(a, '$.LINE') from json_tab;
json_extract_string(a, $.LINE)
BOARDLINE-0

#SQL[@182,N77]Result[1, 72]
select a from json_tab where json_extract_string(a, '$.LINE') = 'BOARDLINE-0';
a
{"CODE": "BOARDCODE-3", "LINE": "BOARDLINE-0", "PANEL": "BOARDPANEL-69"}

#SQL[@183,N79]Result[]
select a from json_tab where json_extract_string(a, '$.LINE') = '"BOARDLINE-0"';

#SQL[@184,N18]Result[]
drop database test;

#SQL[@186,N34]Result[]
create database if not exists test;

#SQL[@187,N8]Result[]
use test;

#SQL[@188,N93]Result[]
CREATE TABLE test_json (
    id INT AUTO_INCREMENT PRIMARY KEY,
    json_data JSON NOT NULL
);

#SQL[@193,N153]Result[]
INSERT INTO test_json (json_data)
VALUES
    ('{"name": "Alice", "age": 25}'),
    ('{"name": "Bob", "age": 30}'),
    ('{"name": "Charlie", "age": 22}');

#SQL[@199,N107]Result[37, 46, 42, 50]
SELECT
    id,
    json_data,
    json_extract_string(json_data, '$.name') AS extracted_name
FROM test_json;
id  ¦  json_data  ¦  extracted_name
1  ¦  {"age": 25, "name": "Alice"}  ¦  Alice
2  ¦  {"age": 30, "name": "Bob"}  ¦  Bob
3  ¦  {"age": 22, "name": "Charlie"}  ¦  Charlie

#SQL[@205,N18]Result[]
drop database test;

#SQL[@207,N34]Result[]
create database if not exists test;

#SQL[@208,N8]Result[]
use test;

#SQL[@209,N23]Result[]
drop table if exists t1;

#SQL[@210,N24]Result[]
create table t1(c1 json);

#SQL[@212,N38]Result[]
insert into t1 values ('{"area":"A"}');

#SQL[@213,N38]Result[]
insert into t1 values ('{"area":"B"}');

#SQL[@214,N38]Result[]
insert into t1 values ('{"area":"C"}');

#SQL[@215,N53]Result[]
insert into t1 values ('{"area":"D","length":10.25}');

#SQL[@216,N50]Result[]
insert into t1 values ('{"area":"E","length":20}');

#SQL[@218,N16]Result[2, 13, 13, 13, 30, 27]
select * from t1;
c1
{"area": "A"}
{"area": "B"}
{"area": "C"}
{"area": "D", "length": 10.25}
{"area": "E", "length": 20}

#SQL[@219,N80]Result[69, 29, 29, 29, 46, 43]
select c1, json_extract(c1, '$.area'), json_extract_string(c1, '$.area') from t1;
c1  ¦  json_extract(c1, $.area)  ¦  json_extract_string(c1, $.area)
{"area": "A"}  ¦  "A"  ¦  A
{"area": "B"}  ¦  "B"  ¦  B
{"area": "C"}  ¦  "C"  ¦  C
{"area": "D", "length": 10.25}  ¦  "D"  ¦  D
{"area": "E", "length": 20}  ¦  "E"  ¦  E

#SQL[@220,N118]Result[109, 39, 39, 39, 57, 51]
select c1, json_extract(c1, '$.area'), json_extract_string(c1, '$.area'), json_extract_float64(c1, '$.length') from t1;
c1  ¦  json_extract(c1, $.area)  ¦  json_extract_string(c1, $.area)  ¦  json_extract_float64(c1, $.length)
{"area": "A"}  ¦  "A"  ¦  A  ¦  null
{"area": "B"}  ¦  "B"  ¦  B  ¦  null
{"area": "C"}  ¦  "C"  ¦  C  ¦  null
{"area": "D", "length": 10.25}  ¦  "D"  ¦  D  ¦  10.25
{"area": "E", "length": 20}  ¦  "E"  ¦  E  ¦  20

#SQL[@221,N51]Result[34, 4, 4, 4, 5, 2]
select json_extract_float64(c1, '$.length') from t1;
json_extract_float64(c1, $.length)
null
null
null
10.25
20

#SQL[@222,N97]Result[34, 2]
select json_extract_float64(c1, '$.length') from t1 where json_extract_string(c1, '$.area') = 'E';
json_extract_float64(c1, $.length)
20

#SQL[@224,N93]Result[]
CREATE TABLE test_json (
    id INT AUTO_INCREMENT PRIMARY KEY,
    json_data JSON NOT NULL
);

#SQL[@229,N290]Result[]
INSERT INTO test_json (json_data)
VALUES
    ('{"number": 25}'),
    ('{"number": 25.5}'),
    ('{"number": "25"}'),
    ('{"number": "25.5"}'),
    ('{"number": "hello"}'),
    ('{"number": true}'),
    ('{"number": null}'),
    ('{"number": [1, 2, 3]}'),
    ('{"number": {"value": 25}}');

#SQL[@241,N112]Result[39, 29, 33, 33, 35, 36, 33, 33, 38, 42]
SELECT
    id,
    json_data,
    json_extract_float64(json_data, '$.number') AS extracted_number
FROM test_json;
id  ¦  json_data  ¦  extracted_number
1  ¦  {"number": 25}  ¦  25
2  ¦  {"number": 25.5}  ¦  25.5
3  ¦  {"number": "25"}  ¦  null
4  ¦  {"number": "25.5"}  ¦  null
5  ¦  {"number": "hello"}  ¦  null
6  ¦  {"number": true}  ¦  null
7  ¦  {"number": null}  ¦  null
8  ¦  {"number": [1, 2, 3]}  ¦  null
9  ¦  {"number": {"value": 25}}  ¦  null

#SQL[@247,N30]Result[]
drop table if exists test_json;

#SQL[@249,N93]Result[]
CREATE TABLE test_json (
    id INT AUTO_INCREMENT PRIMARY KEY,
    json_data JSON NOT NULL
);

#SQL[@254,N412]Result[]
INSERT INTO test_json (json_data)
VALUES
    ('{"name": "Alice", "age": 25}'),
    ('{"name": "Bob", "age": 25.5}'),
    ('{"name": "Charlie", "age": "25"}'),
    ('{"name": "David", "age": "25.5"}'),
    ('{"name": "Eve", "age": "hello"}'),
    ('{"name": "Frank", "age": true}'),
    ('{"name": "Grace", "age": null}'),
    ('{"name": "Hank", "age": [1, 2, 3]}'),
    ('{"name": "Ivan", "age": {"value": 25}}');

#SQL[@267,N170]Result[56, 54, 54, 62, 60, 57, 58, 58, 61, 65]
SELECT
    id,
    json_data,
    json_extract_string(json_data, '$.name') AS extracted_name,
    json_extract_float64(json_data, '$.age') AS extracted_age
FROM test_json;
id  ¦  json_data  ¦  extracted_name  ¦  extracted_age
1  ¦  {"age": 25, "name": "Alice"}  ¦  Alice  ¦  25
2  ¦  {"age": 25.5, "name": "Bob"}  ¦  Bob  ¦  25.5
3  ¦  {"age": "25", "name": "Charlie"}  ¦  Charlie  ¦  null
4  ¦  {"age": "25.5", "name": "David"}  ¦  David  ¦  null
5  ¦  {"age": "hello", "name": "Eve"}  ¦  Eve  ¦  null
6  ¦  {"age": true, "name": "Frank"}  ¦  Frank  ¦  null
7  ¦  {"age": null, "name": "Grace"}  ¦  Grace  ¦  null
8  ¦  {"age": [1, 2, 3], "name": "Hank"}  ¦  Hank  ¦  null
9  ¦  {"age": {"value": 25}, "name": "Ivan"}  ¦  Ivan  ¦  null

#SQL[@274,N104]Result[]
CREATE TABLE test_json_simplified (
    id INT AUTO_INCREMENT PRIMARY KEY,
    json_data JSON NOT NULL
);

#SQL[@279,N775]Result[]
INSERT INTO test_json_simplified (json_data)
VALUES
    ('{"name": "Alice", "age": 25, "scores": {"math": 85.0, "science": 90.0}}'),
    ('{"name": "Bob", "age": 25, "scores": {"math": 80.5, "science": 88.0}}'),
    ('{"name": "Charlie", "age": 25, "scores": {"math": null, "science": null}}'),
    ('{"name": "David", "age": 25, "scores": {"math": 80.5, "science": null}}'),
    ('{"name": "Eve", "age": 25, "scores": {"math": null, "science": 92.0}}'),
    ('{"name": "Frank", "age": 25, "scores": {"math": 85.0, "science": 88.0}}'),
    ('{"name": "Grace", "age": 25, "scores": {"math": null, "science": null}}'),
    ('{"name": "Hank", "age": 25, "scores": {"math": 80.5, "science": 88.0}}'),
    ('{"name": "Ivan", "age": 25, "scores": {"math": null, "science": null}}');

#SQL[@291,N328]Result[96, 36, 36, 42, 40, 36, 36, 40, 37, 39]
SELECT
    id,
    json_extract_string(json_data, '$.name') AS extracted_name,
    json_extract_float64(json_data, '$.age') AS extracted_age,
    json_extract_float64(json_data, '$.scores.math') AS extracted_math_score,
    json_extract_float64(json_data, '$.scores.science') AS extracted_science_score
FROM test_json_simplified;
id  ¦  extracted_name  ¦  extracted_age  ¦  extracted_math_score  ¦  extracted_science_score
1  ¦  Alice  ¦  25  ¦  85  ¦  90
2  ¦  Bob  ¦  25  ¦  80.5  ¦  88
3  ¦  Charlie  ¦  25  ¦  null  ¦  null
4  ¦  David  ¦  25  ¦  80.5  ¦  null
5  ¦  Eve  ¦  25  ¦  null  ¦  92
6  ¦  Frank  ¦  25  ¦  85  ¦  88
7  ¦  Grace  ¦  25  ¦  null  ¦  null
8  ¦  Hank  ¦  25  ¦  80.5  ¦  88
9  ¦  Ivan  ¦  25  ¦  null  ¦  null

#SQL[@299,N18]Result[]
drop database test;

#SQL[@301,N20]Result[]
create database test;

#SQL[@302,N8]Result[]
use test;

#SQL[@303,N30]Result[]
create table test_123(c1 json);

#SQL[@304,N50]Result[]
insert into test_123 values ('{"a1":10, "a2":20}');

#SQL[@305,N59]Result[]
insert into test_123 values ('{"a1":"test", "a2":"test2"}');

#SQL[@306,N22]Result[2, 20, 29]
select * from test_123;
c1
{"a1": 10, "a2": 20}
{"a1": "test", "a2": "test2"}

#SQL[@307,N53]Result[28, 8, 17]
select json_extract(c1, '$.a1', '$.a2') from test_123;
json_extract(c1, $.a1, $.a2)
[10, 20]
["test", "test2"]

#SQL[@308,N61]Error[82]
select json_extract_float64(c1, '$.a1', '$.a2') from test_123;
invalid input: json_extract_float64 should use a path that retrives a single value

#SQL[@309,N60]Error[81]
select json_extract_string(c1, '$.a1', '$.a2') from test_123;
invalid input: json_extract_string should use a path that retrives a single value

#SQL[@310,N18]Result[]
drop database test;

#SQL[@313,N20]Result[]
create database test;

#SQL[@314,N8]Result[]
use test;

#SQL[@316,N92]Result[]
CREATE TABLE example_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    data JSON NOT NULL
);

#SQL[@320,N509]Result[]
INSERT INTO example_table (data)
VALUES (
    '{"CODE": "CODE-3", "LINE": "LINE-4", "PANEL": "PANEL-17", "item1": "value1", "item2": "value2", "item3": "value3", "item4": "value4", "item5": "value5", "item6": "value6", "item7": "value7", "item8": "value8", "item9": "value9", "item10": "value10", "item11": "value11", "item12": "value12", "item13": "value13", "item14": "value14", "item15": "value15", "item16": "value16", "item17": "value17", "item18": "value18", "item19": "value19", "item20": "value20"}'
);

#SQL[@324,N75]Result[12, 466]
select * from example_table where json_extract(data, '$.CODE') = '"CODE-3"';
id  ¦  data
1  ¦  {"CODE": "CODE-3", "LINE": "LINE-4", "PANEL": "PANEL-17", "item1": "value1", "item10": "value10", "item11": "value11", "item12": "value12", "item13": "value13", "item14": "value14", "item15": "value15", "item16": "value16", "item17": "value17", "item18": "value18", "item19": "value19", "item2": "value2", "item20": "value20", "item3": "value3", "item4": "value4", "item5": "value5", "item6": "value6", "item7": "value7", "item8": "value8", "item9": "value9"}

#SQL[@325,N75]Result[12, 466]
select * from example_table where json_extract(data, '$.LINE') = '"LINE-4"';
id  ¦  data
1  ¦  {"CODE": "CODE-3", "LINE": "LINE-4", "PANEL": "PANEL-17", "item1": "value1", "item10": "value10", "item11": "value11", "item12": "value12", "item13": "value13", "item14": "value14", "item15": "value15", "item16": "value16", "item17": "value17", "item18": "value18", "item19": "value19", "item2": "value2", "item20": "value20", "item3": "value3", "item4": "value4", "item5": "value5", "item6": "value6", "item7": "value7", "item8": "value8", "item9": "value9"}

#SQL[@326,N78]Result[12, 466]
select * from example_table where json_extract(data, '$.PANEL') = '"PANEL-17"';
id  ¦  data
1  ¦  {"CODE": "CODE-3", "LINE": "LINE-4", "PANEL": "PANEL-17", "item1": "value1", "item10": "value10", "item11": "value11", "item12": "value12", "item13": "value13", "item14": "value14", "item15": "value15", "item16": "value16", "item17": "value17", "item18": "value18", "item19": "value19", "item2": "value2", "item20": "value20", "item3": "value3", "item4": "value4", "item5": "value5", "item6": "value6", "item7": "value7", "item8": "value8", "item9": "value9"}

#SQL[@327,N18]Result[]
drop database test;

