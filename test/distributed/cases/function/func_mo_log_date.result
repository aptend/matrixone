#SQL[@2,N40]Result[4, 10]
SELECT mo_log_date('2021/01/01') as date;
date
2021-01-01

#SQL[@3,N77]Result[3, 4]
SELECT mo_log_date('2021/01/01') between '2021-01-01' and '2021-01-02' as val;
val
true

#SQL[@4,N54]Result[3, 5]
SELECT mo_log_date('2021/01/01') > '2021-01-01' as val;
val
false

#SQL[@5,N54]Result[3, 4]
SELECT mo_log_date('2021/01/01') < '2021-01-02' as val;
val
true

#SQL[@6,N40]Result[4, 4]
SELECT mo_log_date('2021-01-01') as date;
date
null

#SQL[@7,N59]Result[4, 4]
SELECT mo_log_date('/i/am/not/include/date/string') as date;
date
null

#SQL[@8,N96]Result[3, 4]
SELECT mo_log_date('/i/am/not/include/date/string') between '2021-01-01' and '2021-01-02' as val;
val
null

#SQL[@9,N77]Result[4, 10]
SELECT mo_log_date('etl:/sys/logs/2021/01/01/system.metric/filename') as date;
date
2021-01-01

#SQL[@10,N78]Result[]
SELECT statement from system.statement_info where statement = 'IAMNOTSTATMENT';

#SQL[@16,N414]Result[]
create external table ex_table_2_18(num_col1 tinyint,num_col2 smallint,num_col3 int,num_col4 bigint,num_col5 tinyint unsigned,num_col6 smallint unsigned,num_col7 int unsigned,num_col8 bigint unsigned ,num_col9 float(5,3),num_col10 double(6,5),num_col11 decimal(38,19))infile{"filepath"='$resources/external_table_file/mix/*/*/*/ex_table_2_18.csv'} fields terminated by ',' enclosed by '\"' lines terminated by '\n';

#SQL[@17,N113]Result[13, 17]
select count(*) as cnt, mo_log_date(__mo_filepath) as date from ex_table_2_18 group by __mo_filepath order by cnt;
cnt  ¦  date
1  ¦  2023-02-06

